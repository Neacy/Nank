apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

configurations.all {// 强制RxJava的版本相关
    resolutionStrategy {
        force 'io.reactivex.rxjava2:rxjava:2.1.3',
                'io.reactivex.rxjava2:rxandroid:2.0.1',
                "com.android.support:appcompat-v7:23.0.1"
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'

    compile rootProject.ext.appcompat_v7

    // EventBus
    compile rootProject.ext.eventbus

    // React-Native
    compile rootProject.ext.react_native

    // Retrofit
    compile rootProject.ext.retrofit
    compile rootProject.ext.logging_interceptor
    compile rootProject.ext.adapter_rxjava2
    compile rootProject.ext.converter_gson

    // RxJava
    compile rootProject.ext.rxjava
    compile rootProject.ext.rxandroid

    // RxPermission
    compile rootProject.rxpermissions

    //RxLifecycle
    compile project(":rxlifecycle")
    compile project(":rxlifecycle-android")
    compile project(":rxlifecycle-components")
}
